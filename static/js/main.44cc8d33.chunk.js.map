{"version":3,"sources":["components/FilterButton.js","components/Todo.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["FilterButton","props","type","className","isPressed","onClick","setFilter","name","Todo","useState","isEditing","setEditing","newName","setNewName","editingTemplate","onSubmit","event","preventDefault","editTask","id","htmlFor","value","onChange","target","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","addTask","autoComplete","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","filterList","map","updatedTasks","remainingTasks","editedTasks","taskList","tasksNoun","length","headingText","newTask","nanoid","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44cc8d33.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FilterButton = (props) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Todo = (props) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  const nameChangeHandler = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const submitEditFormHandler = (event) => {\r\n    event.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  };\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={submitEditFormHandler}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={nameChangeHandler}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Form = (props) => {\r\n  const [name, setName] = useState(\"Use hooks!\");\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  };\r\n  const changeHandler = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={changeHandler}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const toggleTaskCompleted = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (id) => {\n    const remainingTasks = tasks.filter((task) => task.id != id);\n    setTasks(remainingTasks);\n  };\n\n  const editTask = (id, newName) => {\n    const editedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTasks);\n  };\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const addTask = (name) => {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const tasksNoun = taskList.length == 1 ? \"task\" : \"tasks\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false },\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}